/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package com.rr.authadi.client

import com.rr.proto.authadi.*
import kotlinx.coroutines.*
import io.grpc.ManagedChannelBuilder
import java.util.*

class App {
    fun insertUserIdentity() {
        val localhost = ManagedChannelBuilder.forAddress("localhost", 5987)
                .usePlaintext().build()
        val immigration = UserImmigrationGrpc.newStub(localhost)
        val request = UserImmigrationRequest.newBuilder()
                .setUserKey("johndoe@mailserver.com")
                .setUserReferenceId(UUID.randomUUID().toString())
                .setPassword("SecretPassword!")
                .setActive(true)
                .build()

        val authentication = UserAuthenticationGrpc.newStub(localhost)
        val authRequest = PasswordAuthenticationRequest.newBuilder()
                .setUserKey("johndoe@mailserver.com")
                .setPassword("SecretPassword!")
                .build()
        runBlocking {
            val response = immigration.addUserIdentity(request)
            println(response)
            val authResponse = authentication.passwordAuthenticate(authRequest)
            println(authResponse)
            val sessionRequest = UserSessionRequest.newBuilder()
                    .setUuid(authResponse.uuid)
                    .setTokenType(UserSessionRequest.TokenType.BEARER)
                    .setToken(authResponse.bearerToken)
                    .build()
            val sessionResponse = authentication.validateUserSession(sessionRequest)
            println(sessionResponse)
        }
    }
}

fun main(args: Array<String>) {
    App().insertUserIdentity()
}
